{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/kvar/kvar.component.ts","webpack:///src/app/kvar/kvar.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/models/User.ts","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/pretplata/pretplata.component.ts","webpack:///src/app/pretplata/pretplata.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/services/auth/auth.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DashboardComponent","router","http","baseUrl","apiUrl","opstine","imeOpstine","get","subscribe","data","kvarovi","navigate","KvarComponent","msgService","opstina","post","lokacija","datumkraja","datumpocetka","add","key","severity","summary","dodaj","LoginComponent","auth","loggedIn","getInitialStatus","user","getUser","login","email","password","User","expirationDate","token","NavbarComponent","authenticated","sub","getStatus","console","log","err","unsubscribe","loguot","PretplataComponent","prijava","RegisterComponent","route","messageService","queryParamMap","params","init","registerUser","ime","prezime","sifra","register","AuthService","userLoggedIn","userLoggedIn$","asObservable","getAuthData","notExpired","getTime","Date","now","inteceptorLogOut","clear","credentials","response","expiresIn","userID","next","saveAuthData","error","message","clearAuthData","firstName","lastName","localStorage","setItem","toISOString","toString","removeItem","getItem","providedIn","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { PretplataComponent } from './pretplata/pretplata.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { KvarComponent } from './kvar/kvar.component';\n\n\nconst routes: Routes = [\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'registration', component: RegisterComponent },\n  { path: 'kvar', component: KvarComponent },\n\n  { path: '', component: PretplataComponent },\n]\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular';\n}\n","<div class=\"container\">\n  <div class=\"navbar\">\n    <app-navbar></app-navbar>\n  </div>\n  <div class=\"main\">\n    <p-toast key=\"toast\" ></p-toast>\n    <router-outlet></router-outlet>\n\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LoginComponent } from './login/login.component';\nimport { MessagesModule } from 'primeng/messages';\nimport { MessageModule } from 'primeng/message';\nimport { CardModule } from 'primeng/card';\nimport { ButtonModule } from 'primeng/button';\nimport { FormsModule } from '@angular/forms';\nimport { DropdownModule} from 'primeng/dropdown'\nimport { HttpClientModule } from '@angular/common/http';\nimport { MessageService } from 'primeng/api';\nimport { RegisterComponent } from './register/register.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PretplataComponent } from './pretplata/pretplata.component';\nimport {ToastModule } from 'primeng/toast'\nimport {TableModule} from 'primeng/table';\nimport {DialogModule} from 'primeng/dialog';\nimport {CalendarModule} from 'primeng/calendar';\nimport { KvarComponent } from './kvar/kvar.component';\n\n\n@NgModule({\n\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    PretplataComponent,\n    KvarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MessagesModule,\n    MessageModule,\n    CardModule,\n    ButtonModule,\n    FormsModule,\n    HttpClientModule,\n    InputTextModule,\n    DropdownModule,\n    BrowserAnimationsModule,\n    ToastModule,\n    TableModule,\n    DialogModule,\n    CalendarModule\n  ],\n  providers: [MessageService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent implements OnInit {\n  baseUrl = environment.apiUrl + '/kvar';\n\n  kvarovi: {\n    id: number,\n    opstina: string,\n    lokacija: string,\n    datumpocetka: Date,\n    datumkraja: Date,\n  }[];\n\n  opstine: {\n    imeOpstine: string,\n    id: number\n  }[] = [\n      { imeOpstine: 'Cukarica', id: 1 },\n      { imeOpstine: 'Rakovica', id: 2 }\n    ];\n\n  opstina: any;\n  lokacija: string;\n  datumpocetka: Date;\n  datumkraja: Date;\n\n  constructor(private router: Router, private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.http.get(this.baseUrl + \"/get\").subscribe((data: { data: any[] }) => {\n      this.kvarovi = data.data;\n    })\n  }\n\n  prikaziDijalog() {\n    this.router.navigate(['kvar']);\n  }\n\n}\n","<div class=\"p-grid p-justify-center\" style=\"width: 100%\">\n \n  <p-table [value]=\"kvarovi\" class=\"p-col-10 tabela-kvarova\">\n    <ng-template pTemplate=\"header\">\n      <tr>\n        <th>Broj kvara</th>\n        <th>Opstina</th>\n        <th>Lokacija</th>\n        <th>Datum pocetka</th>\n        <th>Datum kraja</th>\n      </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-kvar>\n      <tr>\n        <td>{{ kvar.id }}</td>\n        <td>{{ kvar.opstina }}</td>\n        <td>{{ kvar.lokacija }}</td>\n        <td>{{ kvar.datumpocetka|date }}</td>\n        <td>{{ kvar.datumkraja |date}}</td>\n      </tr>\n    </ng-template>\n    <ng-template pTemplate=\"summary\">\n      <p-button class=\"\" label=\"Dodaj novu popravku\" (click)=\"prikaziDijalog()\"></p-button>  \n    </ng-template>\n\n  </p-table>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { environment } from '../../environments/environment';\n\n\n@Component({\n  selector: 'app-kvar',\n  templateUrl: './kvar.component.html',\n  styleUrls: ['./kvar.component.css']\n})\nexport class KvarComponent implements OnInit {\n  opstine: {\n    imeOpstine: string,\n    id: number\n  }[] = [\n      { imeOpstine: 'Opstina1', id: 1 },\n      { imeOpstine: 'Opstina2', id: 2 },\n      { imeOpstine: 'Opstina3', id: 3 },\n\n      { imeOpstine: 'Opstina4', id: 4 }\n\n    ];\n\n  baseUrl = environment.apiUrl + '/kvar';\n\n\n  opstina: any;\n  lokacija: string;\n  datumpocetka: Date;\n  datumkraja: Date;\n\n  constructor(private http: HttpClient, private router: Router, private msgService: MessageService) { }\n\n  ngOnInit(): void {\n    this.opstina = this.opstine[0];\n  }\n  dodaj() {\n    this.http.post(this.baseUrl + '/add', {\n      opstina: this.opstina.imeOpstine,\n      lokacija: this.lokacija,\n      datumkraja: this.datumkraja,\n      datumpocetka: this.datumpocetka\n    }).subscribe(\n      (data: { message: string }) => {\n        this.msgService.add({ key: 'toast', severity: 'success', summary: \"Uspesno ste dodali novi kvar!\" });\n        this.router.navigate(['/dashboard']);\n      }\n    )\n  }\n\n}\n","<div class=\"p-grid p-justify-center p-align-center no-margine spacer-in\" style=\"width: 100%\">\n    <p-card header=\"Novi kvar\" class=\"p-col-12 p-lg-6\">\n        <div class=\"p-grid spacer-in\">\n            <p-message></p-message>\n            <label class=\"p-col-4 spacer-out\">Opstina</label>\n            <p-dropdown class=\"p-col-8 no-margin spacer-out\" [options]=\"opstine\" [(ngModel)]=\"opstina\"\n                optionLabel=\"imeOpstine\"></p-dropdown>\n            <label class=\"p-col-4 spacer-out\">Lokacija</label>\n            <input class=\"p-col-8 spacer-out\" [(ngModel)]=\"lokacija\" pInputText />\n            <label class=\"p-col-4 spacer-out\">Datum pocetka</label>\n            <p-calendar  class=\"p-col-8 spacer-out no-margin\" [(ngModel)]=\"datumpocetka\">\n            </p-calendar>\n            <label class=\"p-col-4 spacer-out\">Datum kraja</label>\n            <p-calendar class=\"p-col-8 spacer-out no-margin ui-calendar-timeonly\"\n                [(ngModel)]=\"datumkraja\"></p-calendar>\n            <p-button type=\"button\" class=\"p-col-4 p-offset-8 no-right\" [style]=\"{width:'100%'}\" label=\"Dodaj kvar\"\n                (onClick)=\"dodaj()\"></p-button>\n\n        </div>\n    </p-card>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../services/auth/auth.service';\nimport { MessageService } from 'primeng/api'\nimport { NgForm, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  email: string;\n  password: string;\n\n  constructor(private auth: AuthService,private router: Router) { }\n\n  ngOnInit(): void {\n    const loggedIn = this.auth.getInitialStatus();\n    if (loggedIn) {\n      const user = this.auth.getUser();\n      if (user) {\n        this.router.navigate([environment.apiUrl + '/dashboard']);\n      }\n    }\n  }\n\n  login() {\n\n    this.auth.login(this.email, this.password);\n  }\n\n}\n","<div class=\"p-grid p-justify-center p-align-center no-margine spacer-in\" style=\"width: 100%\" >\n  <p-card  header=\"Sign in\" class=\"p-col-12 p-lg-4\">\n      <div class=\"spacer-in\">\n          <p-messages class=\"p-col-12\" ></p-messages>\n\n          <form class=\"p-grid\" (submit)=\"login()\">\n              <label class=\"p-col-4 spacer-out\" for=\"email\">Email</label>\n              <input [(ngModel)]=\"this.email\" name=\"email\" class=\"p-col-8 spacer-out\" id=\"email\" type=\"text\" size=\"30\"\n                  pInputText required email #emailInput=\"ngModel\" [ngModelOptions]=\"{updateOn: 'blur'}\">\n              <!--app-message class=\"p-col-12\" [parent]=\"emailInput\"></app-message-->\n\n              <label class=\"p-col-4 spacer-out\" for=\"password\">Password</label>\n              <input [(ngModel)]=\"this.password\" name=\"password\" class=\"p-col-8 spacer-out\" id=\"password\"\n                  type=\"password\" size=\"30\" pInputText required #pass=\"ngModel\">\n\n              <!--app-message class=\"p-col-12\" [parent]=\"pass\"></app-message-->\n\n\n              <p-button type=\"submit\" class=\"p-col-4 p-offset-8 no-right\" [style]=\"{width:'100%'}\" label=\"Login\"></p-button>\n\n\n\n          </form>\n\n      </div>\n\n\n  </p-card>\n</div>\n","export class User {\n\n  ime: string;\n  prezime: string;\n  email: string;\n  sifra: string;\n  constructor(\n    public id: number,\n    public expirationDate: Date,\n    public token: string,\n  ) { }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../services/auth/auth.service';\nimport { Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { User } from '../models/User';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  authenticated: boolean = false;//pazi na ovo\n  sub: Subscription;\n  user: User = new User(null, null, null);\n\n  isDispatcher: boolean;\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.authenticated = this.auth.getInitialStatus();\n    this.user = this.auth.getUser();\n    if (!this.user) {\n      this.user = new User(null, null, null);\n    }\n\n    this.sub = this.auth.getStatus().subscribe(user => {\n      if (user) {\n        this.authenticated = true;\n        this.user = user;\n\n      }\n      else {\n        console.log(\"izlogovan\");\n        this.authenticated = false;\n        this.user = new User(null, null, null);\n\n      }\n    },\n      err => {\n        this.authenticated = false;\n      });\n\n\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  logout() {\n\n    this.auth.loguot();\n\n  }\n\n  login(){\n    this.router.navigate(['/login']);\n  }\n  register(){\n    this.router.navigate(['/registration']);\n\n  }\n}\n","<div class=\"container\">\n\n  <div class=\"logo\">\n    <img src=\"../../assets/Protective_Equipment-06-512.png\" height=\"100%\" />\n  </div>\n\n  <div class=\"navigation\">\n    <a *ngIf=\"!authenticated\" routerLink=\"/\">Pocetna</a>\n    <a *ngIf=\"authenticated\" routerLink=\"/dashboard\">Pocetna</a>\n\n  </div>\n\n  <div class=\"navigation right\">\n    <a *ngIf=\"!authenticated\" (click)=\"login()\">Sign In</a>\n    <a *ngIf=\"authenticated\" (click)=\"logout()\">Sign Out</a>\n    <a *ngIf=\"!authenticated\" (click)=\"register()\">Sign Up</a>\n  </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { MessageService } from 'primeng/api';\n\n\n@Component({\n  selector: 'app-pretplata',\n  templateUrl: './pretplata.component.html',\n  styleUrls: ['./pretplata.component.css']\n})\nexport class PretplataComponent implements OnInit {\n  opstine: {\n    imeOpstine: string,\n    id: number\n  }[] = [\n      { imeOpstine: 'Opstina1', id: 1 },\n      { imeOpstine: 'Opstina2', id: 2 },\n      { imeOpstine: 'Opstina3', id: 3 },\n\n      { imeOpstine: 'Opstina4', id: 4 }\n    ];\n\n  opstina: any;\n  baseUrl = environment.apiUrl + '/pretplatnik';\n  email: string;\n  constructor(private http: HttpClient,\n    private msgService: MessageService) { }\n\n  ngOnInit(): void {\n    this.opstina = this.opstine[0];\n  }\n\n  prijava() {\n    console.log(this.opstina.imeOpstine);\n    this.http.post(this.baseUrl + '/add', { opstina: this.opstina.imeOpstine, email: this.email }).subscribe(\n      (data: { message: string }) => {\n        this.msgService.add({ key: 'toast', severity: 'success', summary: \"Uspesno ste se prijavili na mejling listu!\" });\n\n      }\n    );\n  }\n\n}\n","<div\n  class=\"p-grid p-justify-center p-align-center no-margine spacer-in\"\n  style=\"width: 100%;\"\n>\n  <p-card header=\"Prijava na servis\" class=\"p-col-8 p-lg-4\">\n    <div class=\"spacer-in p-grid\">\n      <label class=\"p-col-4\">Email</label>\n      <input [(ngModel)]=\"this.email\" name=\"email\" class=\"p-col-8 spacer-out\" id=\"email\" type=\"text\" size=\"30\"\n                  pInputText  [ngModelOptions]=\"{updateOn: 'blur'}\">\n      <label class=\"p-col-4\">Opstina</label>\n      <p-dropdown class=\"p-col-8 no-margin\" [options]=\"opstine\" [(ngModel)]=\"opstina\" optionLabel=\"imeOpstine\"></p-dropdown>\n      <p-button class=\"p-col-4 p-offset-8 no-right\" [style]=\"{width:'100%'}\" label=\"Pretplati se\" (onClick)= \"prijava()\"></p-button>\n\n    </div>\n  </p-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n//import { UserService } from '../services/user/user.service';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  public ime: string;\n  prezime: string;\n  email: string;\n  sifra: string;\n\n  id;\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private route: ActivatedRoute,\n    //private userService: UserService,\n    private messageService: MessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.queryParamMap.subscribe((params) => {\n      this.id = params.get('id');\n      if (this.id) {\n        this.init();\n      }\n    });\n  }\n\n  init() {\n    /*this.userService\n      .getUserById(this.id)\n      .subscribe(\n        (data: {\n          message: String;\n          data: {\n            firstName: string;\n            lastName: string;\n            email: string;\n            password: string;\n            type: string;\n          };\n        }) => {\n          console.log(data);\n\n          this.firstName = data.data.firstName;\n          this.lastName = data.data.lastName;\n          this.email = data.data.email;\n          this.password = data.data.password;\n        }\n      );*/\n  }\n\n  register() {\n    this.auth.registerUser(this.ime, this.prezime, this.email, this.sifra);\n  }\n}\n","<div class=\"p-grid p-justify-center p-align-center spacer-in\" style=\"height: 100%; width:100%; \">\n  <p-card header=\"Registration\" class=\"p-col-4\">\n      <div class=\"spacer-in\">\n          <p-messages class=\"p-col-12\" ></p-messages>\n          <form class=\"p-grid\">\n\n\n              <label class=\"p-col-4 spacer-out\" for=\"firstname\">First Name</label>\n              <input [(ngModel)]=\"this.ime\" name=\"firstName\" class=\"p-col-8 spacer-out\" id=\"firstname\"\n                  type=\"text\" size=\"30\" pInputText required #first=\"ngModel\">\n\n              <label class=\"p-col-4 spacer-out\" for=\"lastname\">Last Name</label>\n              <input [(ngModel)]=\"this.prezime\" name=\"lastName\" class=\"p-col-8 spacer-out\" id=\"lastname\" type=\"text\"\n                  size=\"30\" pInputText required #last=\"ngModel\">\n\n              <label class=\"p-col-4 spacer-out\" for=\"email\">Email</label>\n              <input [(ngModel)]=\"this.email\" name=\"email\" class=\"p-col-8 spacer-out\" id=\"email\" type=\"text\" size=\"30\"\n                  pInputText required email #emailInput=\"ngModel\" [ngModelOptions]=\"{updateOn: 'blur'}\">\n\n              <label class=\"p-col-4 spacer-out\" for=\"password\">Password</label>\n              <input [(ngModel)]=\"this.sifra\" name=\"password\" class=\"p-col-8 spacer-out\" id=\"password\"\n                  type=\"password\" size=\"30\" pInputText required #pass=\"ngModel\">\n\n\n\n              <p-button type=\"button\" label=\"Register\" (onClick)=\"register()\" class=\"p-col-3 p-offset-9 no-right spacer-out\" [style]=\"{width:'100%'}\"\n                  [disabled]=\"first.invalid || last.invalid || emailInput.invalid || pass.invalid\" ></p-button>\n\n\n          </form>\n\n      </div>\n\n\n  </p-card>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../../models/User'\nimport { Subject, Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { environment } from '../../../environments/environment';\nimport { MessageService } from 'primeng/api/';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl = environment.apiUrl + '/auth';\n\n  user: User = null;\n\n  userLoggedIn: boolean = false;\n  userLoggedIn$ = new Subject<User>();\n\n  constructor(private http: HttpClient, private router: Router, private msgService: MessageService) { }\n\n  public getStatus(): Observable<User> {\n    return this.userLoggedIn$.asObservable();\n  }\n\n  public getUser(): User {\n    if (this.user) {\n      return this.user;\n    }\n    else {\n      return null;\n    }\n  }\n\n\n\n  getInitialStatus(): boolean { //test if still works when token expires\n\n    console.log('Initializing login information');\n    const user: User = this.getAuthData();\n    if (!user.token || !user.id || !user.expirationDate) {\n      return false;\n    }\n    const notExpired = user.expirationDate.getTime() - Date.now() > 0;\n    if (notExpired) {\n      console.log('not expired');\n      this.userLoggedIn = true;\n      this.user = user;\n      return true;\n    }\n    else {\n      this.inteceptorLogOut();\n      return false;\n    }\n\n  }\n\n\n\n  login(email: string, password: string) {\n    this.msgService.clear();\n    const credentials = {\n      email: email,\n      sifra: password\n    };\n    this.http.post<{ message: string, token: string, expiresIn: number, userID: number, type: string }>(this.baseUrl + '/login', credentials).subscribe\n      (response => {\n        const expirationDate = new Date(\n          Date.now() + response.expiresIn * 1000\n        );\n        console.log(expirationDate);\n        // check if u got the token from the back end\n        this.userLoggedIn = true;\n        this.user = new User(response.userID, expirationDate, response.token);\n        this.userLoggedIn$.next(this.user);\n        this.saveAuthData(this.user);\n        this.router.navigate(['dashboard']);\n      },\n        err => {\n          console.log(err);\n          this.msgService.clear();\n          this.msgService.add({ severity: 'error', summary: err.error.message });\n\n        })\n  }\n\n  loguot() {\n    this.clearAuthData();\n    this.userLoggedIn = false;\n    this.userLoggedIn$.next(null);\n    this.user = null;\n    this.router.navigate([\"\"]);\n    this.msgService.add({ key: 'toast', severity: 'success', summary: 'Successfully signed out!' })\n  }\n\n  inteceptorLogOut() {\n    console.log(\"Interceptor log out\");\n    this.clearAuthData();\n    this.userLoggedIn = false;\n    this.userLoggedIn$.next(null);\n    this.user = null;\n    this.router.navigate([\"\"]);\n    this.msgService.add({  severity: 'error', summary: 'Last time signed in 12h ago. Your session expired. Please sing in again.' })\n  }\n\n  registerUser(firstName: string,\n    lastName: string,\n    email: string,\n    password: string) {\n    const user = {\n      ime: firstName,\n      prezime: lastName,\n      email: email,\n      sifra: password\n    };\n\n    this.http.post(this.baseUrl + '/register', user).subscribe((data: { message: string }) => {\n      console.log(data);\n      this.router.navigate(['/login']);\n      this.msgService.add({ key: 'toast', severity: 'success', summary: data.message })\n    },\n      err => {\n        console.log('*************ERROR*************');\n        console.log(err);\n        this.msgService.clear();\n        this.msgService.add({ severity: 'error', summary: err.error.message });\n      })\n  }\n\n  private saveAuthData(user: User) {\n    localStorage.setItem(\"token\", user.token);\n    localStorage.setItem(\"expiration\", user.expirationDate.toISOString());\n    localStorage.setItem(\"userId\", user.id.toString());\n  }\n\n  private clearAuthData() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expiration\");\n    localStorage.removeItem(\"userId\");\n    localStorage.removeItem(\"type\");\n  }\n  private getAuthData(): User {\n    return new User(\n      +localStorage.getItem(\"userId\"),\n      new Date(localStorage.getItem(\"expiration\")),\n      localStorage.getItem(\"token\"))\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl : \"http://localhost:3000/api\"\n};\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}