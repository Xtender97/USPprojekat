{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/kvar/kvar.component.ts","./src/app/kvar/kvar.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/models/User.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/pretplata/pretplata.component.ts","./src/app/pretplata/pretplata.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services/auth/auth.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { PretplataComponent } from './pretplata/pretplata.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { KvarComponent } from './kvar/kvar.component';\n\n\nconst routes: Routes = [\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'registration', component: RegisterComponent },\n  { path: 'kvar', component: KvarComponent },\n\n  { path: '', component: PretplataComponent },\n]\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular';\n}\n","<div class=\"container\">\n  <div class=\"navbar\">\n    <app-navbar></app-navbar>\n  </div>\n  <div class=\"main\">\n    <p-toast key=\"toast\" ></p-toast>\n    <router-outlet></router-outlet>\n\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LoginComponent } from './login/login.component';\nimport { MessagesModule } from 'primeng/messages';\nimport { MessageModule } from 'primeng/message';\nimport { CardModule } from 'primeng/card';\nimport { ButtonModule } from 'primeng/button';\nimport { FormsModule } from '@angular/forms';\nimport { DropdownModule} from 'primeng/dropdown'\nimport { HttpClientModule } from '@angular/common/http';\nimport { MessageService } from 'primeng/api';\nimport { RegisterComponent } from './register/register.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PretplataComponent } from './pretplata/pretplata.component';\nimport {ToastModule } from 'primeng/toast'\nimport {TableModule} from 'primeng/table';\nimport {DialogModule} from 'primeng/dialog';\nimport {CalendarModule} from 'primeng/calendar';\nimport { KvarComponent } from './kvar/kvar.component';\n\n\n@NgModule({\n\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    PretplataComponent,\n    KvarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MessagesModule,\n    MessageModule,\n    CardModule,\n    ButtonModule,\n    FormsModule,\n    HttpClientModule,\n    InputTextModule,\n    DropdownModule,\n    BrowserAnimationsModule,\n    ToastModule,\n    TableModule,\n    DialogModule,\n    CalendarModule\n  ],\n  providers: [MessageService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent implements OnInit {\n  baseUrl = environment.apiUrl + '/kvar';\n\n  kvarovi: {\n    id: number,\n    opstina: string,\n    lokacija: string,\n    datumpocetka: Date,\n    datumkraja: Date,\n  }[];\n\n  opstine: {\n    imeOpstine: string,\n    id: number\n  }[] = [\n      { imeOpstine: 'Cukarica', id: 1 },\n      { imeOpstine: 'Rakovica', id: 2 }\n    ];\n\n  opstina: any;\n  lokacija: string;\n  datumpocetka: Date;\n  datumkraja: Date;\n\n  constructor(private router: Router, private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.http.get(this.baseUrl + \"/get\").subscribe((data: { data: any[] }) => {\n      this.kvarovi = data.data;\n    })\n  }\n\n  prikaziDijalog() {\n    this.router.navigate(['kvar']);\n  }\n\n}\n","<div class=\"p-grid p-justify-center\" style=\"width: 100%\">\n \n  <p-table [value]=\"kvarovi\" class=\"p-col-10 tabela-kvarova\">\n    <ng-template pTemplate=\"header\">\n      <tr>\n        <th>Broj kvara</th>\n        <th>Opstina</th>\n        <th>Lokacija</th>\n        <th>Datum pocetka</th>\n        <th>Datum kraja</th>\n      </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-kvar>\n      <tr>\n        <td>{{ kvar.id }}</td>\n        <td>{{ kvar.opstina }}</td>\n        <td>{{ kvar.lokacija }}</td>\n        <td>{{ kvar.datumpocetka|date }}</td>\n        <td>{{ kvar.datumkraja |date}}</td>\n      </tr>\n    </ng-template>\n    <ng-template pTemplate=\"summary\">\n      <p-button class=\"\" label=\"Dodaj novu popravku\" (click)=\"prikaziDijalog()\"></p-button>  \n    </ng-template>\n\n  </p-table>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { environment } from '../../environments/environment';\n\n\n@Component({\n  selector: 'app-kvar',\n  templateUrl: './kvar.component.html',\n  styleUrls: ['./kvar.component.css']\n})\nexport class KvarComponent implements OnInit {\n  opstine: {\n    imeOpstine: string,\n    id: number\n  }[] = [\n      { imeOpstine: 'Opstina1', id: 1 },\n      { imeOpstine: 'Opstina2', id: 2 },\n      { imeOpstine: 'Opstina3', id: 3 },\n\n      { imeOpstine: 'Opstina4', id: 4 }\n\n    ];\n\n  baseUrl = environment.apiUrl + '/kvar';\n\n\n  opstina: any;\n  lokacija: string;\n  datumpocetka: Date;\n  datumkraja: Date;\n\n  constructor(private http: HttpClient, private router: Router, private msgService: MessageService) { }\n\n  ngOnInit(): void {\n    this.opstina = this.opstine[0];\n  }\n  dodaj() {\n    this.http.post(this.baseUrl + '/add', {\n      opstina: this.opstina.imeOpstine,\n      lokacija: this.lokacija,\n      datumkraja: this.datumkraja,\n      datumpocetka: this.datumpocetka\n    }).subscribe(\n      (data: { message: string }) => {\n        this.msgService.add({ key: 'toast', severity: 'success', summary: \"Uspesno ste dodali novi kvar!\" });\n        this.router.navigate(['/dashboard']);\n      }\n    )\n  }\n\n}\n","<div class=\"p-grid p-justify-center p-align-center no-margine spacer-in\" style=\"width: 100%\">\n    <p-card header=\"Novi kvar\" class=\"p-col-12 p-lg-6\">\n        <div class=\"p-grid spacer-in\">\n            <p-message></p-message>\n            <label class=\"p-col-4 spacer-out\">Opstina</label>\n            <p-dropdown class=\"p-col-8 no-margin spacer-out\" [options]=\"opstine\" [(ngModel)]=\"opstina\"\n                optionLabel=\"imeOpstine\"></p-dropdown>\n            <label class=\"p-col-4 spacer-out\">Lokacija</label>\n            <input class=\"p-col-8 spacer-out\" [(ngModel)]=\"lokacija\" pInputText />\n            <label class=\"p-col-4 spacer-out\">Datum pocetka</label>\n            <p-calendar  class=\"p-col-8 spacer-out no-margin\" [(ngModel)]=\"datumpocetka\">\n            </p-calendar>\n            <label class=\"p-col-4 spacer-out\">Datum kraja</label>\n            <p-calendar class=\"p-col-8 spacer-out no-margin ui-calendar-timeonly\"\n                [(ngModel)]=\"datumkraja\"></p-calendar>\n            <p-button type=\"button\" class=\"p-col-4 p-offset-8 no-right\" [style]=\"{width:'100%'}\" label=\"Dodaj kvar\"\n                (onClick)=\"dodaj()\"></p-button>\n\n        </div>\n    </p-card>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../services/auth/auth.service';\nimport { MessageService } from 'primeng/api'\nimport { NgForm, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  email: string;\n  password: string;\n\n  constructor(private auth: AuthService,private router: Router) { }\n\n  ngOnInit(): void {\n    const loggedIn = this.auth.getInitialStatus();\n    if (loggedIn) {\n      const user = this.auth.getUser();\n      if (user) {\n        this.router.navigate([environment.apiUrl + '/dashboard']);\n      }\n    }\n  }\n\n  login() {\n\n    this.auth.login(this.email, this.password);\n  }\n\n}\n","<div class=\"p-grid p-justify-center p-align-center no-margine spacer-in\" style=\"width: 100%\" >\n  <p-card  header=\"Sign in\" class=\"p-col-12 p-lg-4\">\n      <div class=\"spacer-in\">\n          <p-messages class=\"p-col-12\" ></p-messages>\n\n          <form class=\"p-grid\" (submit)=\"login()\">\n              <label class=\"p-col-4 spacer-out\" for=\"email\">Email</label>\n              <input [(ngModel)]=\"this.email\" name=\"email\" class=\"p-col-8 spacer-out\" id=\"email\" type=\"text\" size=\"30\"\n                  pInputText required email #emailInput=\"ngModel\" [ngModelOptions]=\"{updateOn: 'blur'}\">\n              <!--app-message class=\"p-col-12\" [parent]=\"emailInput\"></app-message-->\n\n              <label class=\"p-col-4 spacer-out\" for=\"password\">Password</label>\n              <input [(ngModel)]=\"this.password\" name=\"password\" class=\"p-col-8 spacer-out\" id=\"password\"\n                  type=\"password\" size=\"30\" pInputText required #pass=\"ngModel\">\n\n              <!--app-message class=\"p-col-12\" [parent]=\"pass\"></app-message-->\n\n\n              <p-button type=\"submit\" class=\"p-col-4 p-offset-8 no-right\" [style]=\"{width:'100%'}\" label=\"Login\"></p-button>\n\n\n\n          </form>\n\n      </div>\n\n\n  </p-card>\n</div>\n","export class User {\n\n  ime: string;\n  prezime: string;\n  email: string;\n  sifra: string;\n  constructor(\n    public id: number,\n    public expirationDate: Date,\n    public token: string,\n  ) { }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../services/auth/auth.service';\nimport { Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { User } from '../models/User';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  authenticated: boolean = false;//pazi na ovo\n  sub: Subscription;\n  user: User = new User(null, null, null);\n\n  isDispatcher: boolean;\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.authenticated = this.auth.getInitialStatus();\n    this.user = this.auth.getUser();\n    if (!this.user) {\n      this.user = new User(null, null, null);\n    }\n\n    this.sub = this.auth.getStatus().subscribe(user => {\n      if (user) {\n        this.authenticated = true;\n        this.user = user;\n\n      }\n      else {\n        console.log(\"izlogovan\");\n        this.authenticated = false;\n        this.user = new User(null, null, null);\n\n      }\n    },\n      err => {\n        this.authenticated = false;\n      });\n\n\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  logout() {\n\n    this.auth.loguot();\n\n  }\n\n  login(){\n    this.router.navigate(['/login']);\n  }\n  register(){\n    this.router.navigate(['/registration']);\n\n  }\n}\n","<div class=\"container\">\n\n  <div class=\"logo\">\n    <img src=\"../../assets/Protective_Equipment-06-512.png\" height=\"100%\" />\n  </div>\n\n  <div class=\"navigation\">\n    <a *ngIf=\"!authenticated\" routerLink=\"/\">Pocetna</a>\n    <a *ngIf=\"authenticated\" routerLink=\"/dashboard\">Pocetna</a>\n\n  </div>\n\n  <div class=\"navigation right\">\n    <a *ngIf=\"!authenticated\" (click)=\"login()\">Sign In</a>\n    <a *ngIf=\"authenticated\" (click)=\"logout()\">Sign Out</a>\n    <a *ngIf=\"!authenticated\" (click)=\"register()\">Sign Up</a>\n  </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { MessageService } from 'primeng/api';\n\n\n@Component({\n  selector: 'app-pretplata',\n  templateUrl: './pretplata.component.html',\n  styleUrls: ['./pretplata.component.css']\n})\nexport class PretplataComponent implements OnInit {\n  opstine: {\n    imeOpstine: string,\n    id: number\n  }[] = [\n      { imeOpstine: 'Opstina1', id: 1 },\n      { imeOpstine: 'Opstina2', id: 2 },\n      { imeOpstine: 'Opstina3', id: 3 },\n\n      { imeOpstine: 'Opstina4', id: 4 }\n    ];\n\n  opstina: any;\n  baseUrl = environment.apiUrl + '/pretplatnik';\n  email: string;\n  constructor(private http: HttpClient,\n    private msgService: MessageService) { }\n\n  ngOnInit(): void {\n    this.opstina = this.opstine[0];\n  }\n\n  prijava() {\n    console.log(this.opstina.imeOpstine);\n    this.http.post(this.baseUrl + '/add', { opstina: this.opstina.imeOpstine, email: this.email }).subscribe(\n      (data: { message: string }) => {\n        this.msgService.add({ key: 'toast', severity: 'success', summary: \"Uspesno ste se prijavili na mejling listu!\" });\n\n      }\n    );\n  }\n\n}\n","<div\n  class=\"p-grid p-justify-center p-align-center no-margine spacer-in\"\n  style=\"width: 100%;\"\n>\n  <p-card header=\"Prijava na servis\" class=\"p-col-8 p-lg-4\">\n    <div class=\"spacer-in p-grid\">\n      <label class=\"p-col-4\">Email</label>\n      <input [(ngModel)]=\"this.email\" name=\"email\" class=\"p-col-8 spacer-out\" id=\"email\" type=\"text\" size=\"30\"\n                  pInputText  [ngModelOptions]=\"{updateOn: 'blur'}\">\n      <label class=\"p-col-4\">Opstina</label>\n      <p-dropdown class=\"p-col-8 no-margin\" [options]=\"opstine\" [(ngModel)]=\"opstina\" optionLabel=\"imeOpstine\"></p-dropdown>\n      <p-button class=\"p-col-4 p-offset-8 no-right\" [style]=\"{width:'100%'}\" label=\"Pretplati se\" (onClick)= \"prijava()\"></p-button>\n\n    </div>\n  </p-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n//import { UserService } from '../services/user/user.service';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  public ime: string;\n  prezime: string;\n  email: string;\n  sifra: string;\n\n  id;\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private route: ActivatedRoute,\n    //private userService: UserService,\n    private messageService: MessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.queryParamMap.subscribe((params) => {\n      this.id = params.get('id');\n      if (this.id) {\n        this.init();\n      }\n    });\n  }\n\n  init() {\n    /*this.userService\n      .getUserById(this.id)\n      .subscribe(\n        (data: {\n          message: String;\n          data: {\n            firstName: string;\n            lastName: string;\n            email: string;\n            password: string;\n            type: string;\n          };\n        }) => {\n          console.log(data);\n\n          this.firstName = data.data.firstName;\n          this.lastName = data.data.lastName;\n          this.email = data.data.email;\n          this.password = data.data.password;\n        }\n      );*/\n  }\n\n  register() {\n    this.auth.registerUser(this.ime, this.prezime, this.email, this.sifra);\n  }\n}\n","<div class=\"p-grid p-justify-center p-align-center spacer-in\" style=\"height: 100%; width:100%; \">\n  <p-card header=\"Registration\" class=\"p-col-4\">\n      <div class=\"spacer-in\">\n          <p-messages class=\"p-col-12\" ></p-messages>\n          <form class=\"p-grid\">\n\n\n              <label class=\"p-col-4 spacer-out\" for=\"firstname\">First Name</label>\n              <input [(ngModel)]=\"this.ime\" name=\"firstName\" class=\"p-col-8 spacer-out\" id=\"firstname\"\n                  type=\"text\" size=\"30\" pInputText required #first=\"ngModel\">\n\n              <label class=\"p-col-4 spacer-out\" for=\"lastname\">Last Name</label>\n              <input [(ngModel)]=\"this.prezime\" name=\"lastName\" class=\"p-col-8 spacer-out\" id=\"lastname\" type=\"text\"\n                  size=\"30\" pInputText required #last=\"ngModel\">\n\n              <label class=\"p-col-4 spacer-out\" for=\"email\">Email</label>\n              <input [(ngModel)]=\"this.email\" name=\"email\" class=\"p-col-8 spacer-out\" id=\"email\" type=\"text\" size=\"30\"\n                  pInputText required email #emailInput=\"ngModel\" [ngModelOptions]=\"{updateOn: 'blur'}\">\n\n              <label class=\"p-col-4 spacer-out\" for=\"password\">Password</label>\n              <input [(ngModel)]=\"this.sifra\" name=\"password\" class=\"p-col-8 spacer-out\" id=\"password\"\n                  type=\"password\" size=\"30\" pInputText required #pass=\"ngModel\">\n\n\n\n              <p-button type=\"button\" label=\"Register\" (onClick)=\"register()\" class=\"p-col-3 p-offset-9 no-right spacer-out\" [style]=\"{width:'100%'}\"\n                  [disabled]=\"first.invalid || last.invalid || emailInput.invalid || pass.invalid\" ></p-button>\n\n\n          </form>\n\n      </div>\n\n\n  </p-card>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../../models/User'\nimport { Subject, Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { environment } from '../../../environments/environment';\nimport { MessageService } from 'primeng/api/';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl = environment.apiUrl + '/auth';\n\n  user: User = null;\n\n  userLoggedIn: boolean = false;\n  userLoggedIn$ = new Subject<User>();\n\n  constructor(private http: HttpClient, private router: Router, private msgService: MessageService) { }\n\n  public getStatus(): Observable<User> {\n    return this.userLoggedIn$.asObservable();\n  }\n\n  public getUser(): User {\n    if (this.user) {\n      return this.user;\n    }\n    else {\n      return null;\n    }\n  }\n\n\n\n  getInitialStatus(): boolean { //test if still works when token expires\n\n    console.log('Initializing login information');\n    const user: User = this.getAuthData();\n    if (!user.token || !user.id || !user.expirationDate) {\n      return false;\n    }\n    const notExpired = user.expirationDate.getTime() - Date.now() > 0;\n    if (notExpired) {\n      console.log('not expired');\n      this.userLoggedIn = true;\n      this.user = user;\n      return true;\n    }\n    else {\n      this.inteceptorLogOut();\n      return false;\n    }\n\n  }\n\n\n\n  login(email: string, password: string) {\n    this.msgService.clear();\n    const credentials = {\n      email: email,\n      sifra: password\n    };\n    this.http.post<{ message: string, token: string, expiresIn: number, userID: number, type: string }>(this.baseUrl + '/login', credentials).subscribe\n      (response => {\n        const expirationDate = new Date(\n          Date.now() + response.expiresIn * 1000\n        );\n        console.log(expirationDate);\n        // check if u got the token from the back end\n        this.userLoggedIn = true;\n        this.user = new User(response.userID, expirationDate, response.token);\n        this.userLoggedIn$.next(this.user);\n        this.saveAuthData(this.user);\n        this.router.navigate(['dashboard']);\n      },\n        err => {\n          console.log(err);\n          this.msgService.clear();\n          this.msgService.add({ severity: 'error', summary: err.error.message });\n\n        })\n  }\n\n  loguot() {\n    this.clearAuthData();\n    this.userLoggedIn = false;\n    this.userLoggedIn$.next(null);\n    this.user = null;\n    this.router.navigate([\"\"]);\n    this.msgService.add({ key: 'toast', severity: 'success', summary: 'Successfully signed out!' })\n  }\n\n  inteceptorLogOut() {\n    console.log(\"Interceptor log out\");\n    this.clearAuthData();\n    this.userLoggedIn = false;\n    this.userLoggedIn$.next(null);\n    this.user = null;\n    this.router.navigate([\"\"]);\n    this.msgService.add({  severity: 'error', summary: 'Last time signed in 12h ago. Your session expired. Please sing in again.' })\n  }\n\n  registerUser(firstName: string,\n    lastName: string,\n    email: string,\n    password: string) {\n    const user = {\n      ime: firstName,\n      prezime: lastName,\n      email: email,\n      sifra: password\n    };\n\n    this.http.post(this.baseUrl + '/register', user).subscribe((data: { message: string }) => {\n      console.log(data);\n      this.router.navigate(['/login']);\n      this.msgService.add({ key: 'toast', severity: 'success', summary: data.message })\n    },\n      err => {\n        console.log('*************ERROR*************');\n        console.log(err);\n        this.msgService.clear();\n        this.msgService.add({ severity: 'error', summary: err.error.message });\n      })\n  }\n\n  private saveAuthData(user: User) {\n    localStorage.setItem(\"token\", user.token);\n    localStorage.setItem(\"expiration\", user.expirationDate.toISOString());\n    localStorage.setItem(\"userId\", user.id.toString());\n  }\n\n  private clearAuthData() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expiration\");\n    localStorage.removeItem(\"userId\");\n    localStorage.removeItem(\"type\");\n  }\n  private getAuthData(): User {\n    return new User(\n      +localStorage.getItem(\"userId\"),\n      new Date(localStorage.getItem(\"expiration\")),\n      localStorage.getItem(\"token\"))\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl : \"http://localhost:3000/api\"\n};\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}